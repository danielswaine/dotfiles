snippet copy "copyright header"
/*
 * File:   ${1:main.c}
 * Author: ${2:`echo $USER`}
 * Copyright (c) `date +%Y`
 *
 * Created on `date '+%B %d, %Y, %I:%M'` `date +%p | tr [a-z] [A-Z]`
 */
 
 ${0}
endsnippet

snippet ifdefhead "if defined header"
#ifndef ${1:FILE}_H
#define $1
  $0
#endif /* $1_H */
endsnippet

snippet todo "/* TODO (DS): ..."
/* TODO (DS): $0 */
endsnippet

snippet def "#define ..."
#define $1
endsnippet

snippet inc
#include <${1:stdio}.h>
endsnippet

snippet main "main(void)"
int main(void)
{
  ${VISUAL}$0
  return 0;
}
endsnippet

snippet if "if condition"
if (${1})
{
  ${VISUAL}${0}
}
endsnippet

snippet el "else"
else
{
  ${VISUAL}${0}
}
endsnippet

snippet ife "if else"
if (${1:true})
{
  ${2:${VISUAL}}
}
else
{
  ${0}
}
endsnippet

snippet elif "else if"
else if (${1:true})
{
  ${0:${VISUAL}}
}
endsnippet

snippet ifi "single line if"
if (${1:true}) ${0};
endsnippet

snippet tern "if ternary"
${1:/* condition */} ? ${2:a} : ${3:b};
endsnippet

snippet switch "switch case statement"
switch (${1:var})
{
  case ${2:case}:
    ${3}
    break;
  default:
    ${6}
}
endsnippet

snippet case "add single case statement"
  case ${1:case}
    ${2}
    break;
endsnippet

snippet do "do while loop"
do {
  ${VISUAL}${0}
} while (${1});
endsnippet

snippet wh "while loop"
while (${1}) {
  ${VISUAL}${0}
}
endsnippet

snippet for "for loop (for)"
for (${2:i} = 0; $2 < ${1:count}; ${3:++$2}) {
  ${VISUAL}$0
}
endsnippet

snippet fori "for int loop (fori)"
for (${4:int} ${2:i} = 0; $2 < ${1:count}; ${3:++$2}) {
  ${VISUAL}$0
}
endsnippet

snippet printf "printf .. (printf)"
printf("${1:%s}\n"${1/([^%]|%%)*(%.)?.*/(?2:, :\);)/}$2${1/([^%]|%%)*(%.)?.*/(?2:\);)/}
endsnippet

snippet st "struct"
struct ${1:`!p snip.rv = (snip.basename or "name") + "_t"`}
{
  $0
}
endsnippet

snippet typedef "typedef"
typedef ${1:int} ${2:customType};
endsnippet

snippet typedefs "typedef struct"
typedef struct
{
  $0
} ${1:var}_t;
endsnippet

snippet fun "function" b
${1:void} ${2:function_name}($3)
{
  ${VISUAL}$0
}
endsnippet

snippet fund "function declaration" b
${1:void} ${2:function_name}($3);
endsnippet
